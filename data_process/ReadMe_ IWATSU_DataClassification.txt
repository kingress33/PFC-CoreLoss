### 📌 IWATSU 測試數據分類腳本使用說明**  

本腳本用於**自動整理 IWATSU 測試數據**，依照**日期分類**並將數據**分類存放**，以便後續分析與機器學習使用。

---

## **📂 資料夾結構**
請將**IWATSU 測試數據**放入 `RawData` 目錄中。  
⚠ 若 `RawData` 目錄不存在，請自行建立。  

測試數據會按照**日期 (西元後兩位+月份+日期)** 存放，例如：
```
RawData/
├── 250312/   # 2025年3月12日的數據
│   ├── 測試1/
│   │   ├── 測試數據_1.csv
│   │   ├── 測試數據_2_Norm..csv
│   │   ├── 圖片_1.jpg
│   ├── 測試2/
│   │   ├── 測試數據_3.csv
│   │   ├── 測試數據_4_Norm..csv
│   │   ├── 圖片_2.jpg
```

---

## **⚙️ 程式運作方式**
執行後，程式會**自動遍歷 `RawData/{日期}` 內的所有子目錄與檔案**，並根據檔案類型分類：
- **📁 `waveforms/`** → 單點波形數據 (`_Norm..csv`)
- **📁 `summary/`** → IWATSU 總表 (`.csv`，但非 `_Norm.csv`)
- **📁 `images/`** → 測試圖片 (`.jpg`)

---

## **📢 注意事項**
1. **日期格式須符合 `YYMMDD` (西元後兩位+月份+日期)**
   - 例如 `250312` 代表 **2025 年 3 月 12 日**。
2. **波形檔案需符合 `_Norm..csv` 或 `_Norm.csv` 命名規則**
   - **確保 `_Norm..csv` 與 `_Norm.csv` 是否一致**，避免錯誤分類。
3. **執行前請確認 `RawData/{日期}` 內的測試數據已準備好**

---

## **🚀 執行方式**
1. **確保 Python 環境可用**
2. **放入測試數據 (`RawData/{日期}`)**
3. **執行腳本**
   ```bash
   python script.py
   ```
4. **分類後的數據將儲存於以下資料夾**
   ```
   waveforms/   # 單點波形數據
   summary/     # IWATSU 總表
   images/      # 測試圖片
   ```
5. **執行完畢後，終端機將顯示**
   ```
   檔案複製完成！
   ```

---

## **📌 最終分類結果**
```
waveforms/
├── 測試數據_2_Norm..csv
├── 測試數據_4_Norm..csv

summary/
├── 測試數據_1.csv
├── 測試數據_3.csv

images/
├── 圖片_1.jpg
├── 圖片_2.jpg
```

✅ **這樣就完成 IWATSU 測試數據的整理與分類！** 🚀